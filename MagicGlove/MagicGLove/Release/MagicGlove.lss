
MagicGlove.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000001ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e0  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000133  00000000  00000000  00000db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000ee9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	41 c0       	rjmp	.+130    	; 0x88 <__bad_interrupt>
   6:	00 00       	nop
   8:	3f c0       	rjmp	.+126    	; 0x88 <__bad_interrupt>
   a:	00 00       	nop
   c:	3d c0       	rjmp	.+122    	; 0x88 <__bad_interrupt>
   e:	00 00       	nop
  10:	3b c0       	rjmp	.+118    	; 0x88 <__bad_interrupt>
  12:	00 00       	nop
  14:	39 c0       	rjmp	.+114    	; 0x88 <__bad_interrupt>
  16:	00 00       	nop
  18:	37 c0       	rjmp	.+110    	; 0x88 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	35 c0       	rjmp	.+106    	; 0x88 <__bad_interrupt>
  1e:	00 00       	nop
  20:	33 c0       	rjmp	.+102    	; 0x88 <__bad_interrupt>
  22:	00 00       	nop
  24:	31 c0       	rjmp	.+98     	; 0x88 <__bad_interrupt>
  26:	00 00       	nop
  28:	2f c0       	rjmp	.+94     	; 0x88 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2d c0       	rjmp	.+90     	; 0x88 <__bad_interrupt>
  2e:	00 00       	nop
  30:	2b c0       	rjmp	.+86     	; 0x88 <__bad_interrupt>
  32:	00 00       	nop
  34:	29 c0       	rjmp	.+82     	; 0x88 <__bad_interrupt>
  36:	00 00       	nop
  38:	27 c0       	rjmp	.+78     	; 0x88 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	25 c0       	rjmp	.+74     	; 0x88 <__bad_interrupt>
  3e:	00 00       	nop
  40:	23 c0       	rjmp	.+70     	; 0x88 <__bad_interrupt>
  42:	00 00       	nop
  44:	5e c0       	rjmp	.+188    	; 0x102 <__vector_17>
  46:	00 00       	nop
  48:	1f c0       	rjmp	.+62     	; 0x88 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1d c0       	rjmp	.+58     	; 0x88 <__bad_interrupt>
  4e:	00 00       	nop
  50:	1b c0       	rjmp	.+54     	; 0x88 <__bad_interrupt>
  52:	00 00       	nop
  54:	19 c0       	rjmp	.+50     	; 0x88 <__bad_interrupt>
  56:	00 00       	nop
  58:	17 c0       	rjmp	.+46     	; 0x88 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	15 c0       	rjmp	.+42     	; 0x88 <__bad_interrupt>
  5e:	00 00       	nop
  60:	13 c0       	rjmp	.+38     	; 0x88 <__bad_interrupt>
  62:	00 00       	nop
  64:	11 c0       	rjmp	.+34     	; 0x88 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e d0       	rcall	.+28     	; 0xa2 <main>
  86:	57 c0       	rjmp	.+174    	; 0x136 <_exit>

00000088 <__bad_interrupt>:
  88:	bb cf       	rjmp	.-138    	; 0x0 <__vectors>

0000008a <board_init>:
  8a:	08 95       	ret

0000008c <SPI_init>:
  8c:	88 e3       	ldi	r24, 0x38	; 56
  8e:	84 b9       	out	0x04, r24	; 4
  90:	8d e5       	ldi	r24, 0x5D	; 93
  92:	8c bd       	out	0x2c, r24	; 44
  94:	08 95       	ret

00000096 <SPI_Transceive>:
  96:	8e bd       	out	0x2e, r24	; 46
  98:	0d b4       	in	r0, 0x2d	; 45
  9a:	07 fe       	sbrs	r0, 7
  9c:	fd cf       	rjmp	.-6      	; 0x98 <SPI_Transceive+0x2>
  9e:	8e b5       	in	r24, 0x2e	; 46
  a0:	08 95       	ret

000000a2 <main>:
  a2:	f3 df       	rcall	.-26     	; 0x8a <board_init>
  a4:	f3 df       	rcall	.-26     	; 0x8c <SPI_init>
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	f6 df       	rcall	.-20     	; 0x96 <SPI_Transceive>
  aa:	78 94       	sei
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	8a b9       	out	0x0a, r24	; 10
  b0:	21 98       	cbi	0x04, 1	; 4
  b2:	29 98       	cbi	0x05, 1	; 5
  b4:	20 e0       	ldi	r18, 0x00	; 0
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	4f ef       	ldi	r20, 0xFF	; 255
  be:	19 99       	sbic	0x03, 1	; 3
  c0:	4b b9       	out	0x0b, r20	; 11
  c2:	5f e7       	ldi	r21, 0x7F	; 127
  c4:	68 e3       	ldi	r22, 0x38	; 56
  c6:	71 e0       	ldi	r23, 0x01	; 1
  c8:	51 50       	subi	r21, 0x01	; 1
  ca:	60 40       	sbci	r22, 0x00	; 0
  cc:	70 40       	sbci	r23, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x26>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x30>
  d2:	00 00       	nop
  d4:	8b b9       	out	0x0b, r24	; 11
  d6:	21 15       	cp	r18, r1
  d8:	31 05       	cpc	r19, r1
  da:	19 f4       	brne	.+6      	; 0xe2 <main+0x40>
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	04 c0       	rjmp	.+8      	; 0xea <main+0x48>
  e2:	97 fd       	sbrc	r25, 7
  e4:	01 96       	adiw	r24, 0x01	; 1
  e6:	95 95       	asr	r25
  e8:	87 95       	ror	r24
  ea:	80 38       	cpi	r24, 0x80	; 128
  ec:	91 05       	cpc	r25, r1
  ee:	19 f4       	brne	.+6      	; 0xf6 <main+0x54>
  f0:	21 e0       	ldi	r18, 0x01	; 1
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	e4 cf       	rjmp	.-56     	; 0xbe <main+0x1c>
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	91 05       	cpc	r25, r1
  fa:	09 f7       	brne	.-62     	; 0xbe <main+0x1c>
  fc:	20 e0       	ldi	r18, 0x00	; 0
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	de cf       	rjmp	.-68     	; 0xbe <main+0x1c>

00000102 <__vector_17>:
 102:	1f 92       	push	r1
 104:	0f 92       	push	r0
 106:	0f b6       	in	r0, 0x3f	; 63
 108:	0f 92       	push	r0
 10a:	11 24       	eor	r1, r1
 10c:	8f 93       	push	r24
 10e:	9f 93       	push	r25
 110:	8d b5       	in	r24, 0x2d	; 45
 112:	80 38       	cpi	r24, 0x80	; 128
 114:	49 f4       	brne	.+18     	; 0x128 <__vector_17+0x26>
 116:	8e b5       	in	r24, 0x2e	; 46
 118:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <serial_data>
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 124:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 128:	9f 91       	pop	r25
 12a:	8f 91       	pop	r24
 12c:	0f 90       	pop	r0
 12e:	0f be       	out	0x3f, r0	; 63
 130:	0f 90       	pop	r0
 132:	1f 90       	pop	r1
 134:	18 95       	reti

00000136 <_exit>:
 136:	f8 94       	cli

00000138 <__stop_program>:
 138:	ff cf       	rjmp	.-2      	; 0x138 <__stop_program>
